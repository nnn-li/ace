var UndoManager = (function () {
    function UndoManager() {
        this.reset();
    }
    UndoManager.prototype.execute = function (options) {
        var deltas = options.args[0];
        this.$editSession = options.args[1];
        if (options.merge && this.hasUndo()) {
            this.dirtyCounter--;
            deltas = this.$undoStack.pop().concat(deltas);
        }
        this.$undoStack.push(deltas);
        this.$redoStack = [];
        if (this.dirtyCounter < 0) {
            this.dirtyCounter = NaN;
        }
        this.dirtyCounter++;
    };
    UndoManager.prototype.undo = function (dontSelect) {
        var deltas = this.$undoStack.pop();
        var undoSelectionRange = null;
        if (deltas) {
            undoSelectionRange = this.$editSession.undoChanges(deltas, dontSelect);
            this.$redoStack.push(deltas);
            this.dirtyCounter--;
        }
        return undoSelectionRange;
    };
    UndoManager.prototype.redo = function (dontSelect) {
        var deltas = this.$redoStack.pop();
        var redoSelectionRange = null;
        if (deltas) {
            redoSelectionRange = this.$editSession.redoChanges(deltas, dontSelect);
            this.$undoStack.push(deltas);
            this.dirtyCounter++;
        }
        return redoSelectionRange;
    };
    UndoManager.prototype.reset = function () {
        this.$undoStack = [];
        this.$redoStack = [];
        this.dirtyCounter = 0;
    };
    UndoManager.prototype.hasUndo = function () {
        return this.$undoStack.length > 0;
    };
    UndoManager.prototype.hasRedo = function () {
        return this.$redoStack.length > 0;
    };
    UndoManager.prototype.markClean = function () {
        this.dirtyCounter = 0;
    };
    UndoManager.prototype.isClean = function () {
        return this.dirtyCounter === 0;
    };
    return UndoManager;
})();
exports.UndoManager = UndoManager;
//# sourceMappingURL=data:application/json;base64,