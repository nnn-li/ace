import EditorPosition from './EditorPosition';
export default class CompletionService {
    constructor(editor, workspace) {
        this._editor = editor;
        this._workspace = workspace;
        this._editorPos = new EditorPosition(editor);
    }
    _getCompletionsAtPosition(fileName, position, memberMode, callback) {
        if (typeof this._workspace !== 'undefined') {
            var args = { 'fileName': fileName, 'position': position, 'memberMode': memberMode };
            this._workspace.getCompletionsAtPosition(fileName, position, memberMode, callback);
        }
        else {
            callback(new Error("Completions are not available at this time."));
        }
    }
    getCompletionsAtCursor(fileName, cursor, callback) {
        var position = this._editorPos.getPositionChars(cursor);
        var memberMode = false;
        var text = this._editor.getSession().getLine(cursor.row).slice(0, cursor.column);
        var matches = text.match(/\.([a-zA-Z_0-9\$]*$)/);
        if (matches && matches.length > 0) {
            this.matchText = matches[1];
            memberMode = true;
            position -= this.matchText.length;
        }
        else {
            matches = text.match(/[a-zA-Z_0-9\$]*$/);
            this.matchText = matches[0];
            memberMode = false;
        }
        this._getCompletionsAtPosition(fileName, position, memberMode, callback);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcGxldGlvblNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kZS90eXBlc2NyaXB0L0NvbXBsZXRpb25TZXJ2aWNlLnRzIl0sIm5hbWVzIjpbIkNvbXBsZXRpb25TZXJ2aWNlIiwiQ29tcGxldGlvblNlcnZpY2UuY29uc3RydWN0b3IiLCJDb21wbGV0aW9uU2VydmljZS5fZ2V0Q29tcGxldGlvbnNBdFBvc2l0aW9uIiwiQ29tcGxldGlvblNlcnZpY2UuZ2V0Q29tcGxldGlvbnNBdEN1cnNvciJdLCJtYXBwaW5ncyI6Ik9BRU8sY0FBYyxNQUFNLGtCQUFrQjtBQUc3QztJQUtJQSxZQUFZQSxNQUFjQSxFQUFFQSxTQUFvQkE7UUFDNUNDLElBQUlBLENBQUNBLE9BQU9BLEdBQUdBLE1BQU1BLENBQUNBO1FBQ3RCQSxJQUFJQSxDQUFDQSxVQUFVQSxHQUFHQSxTQUFTQSxDQUFDQTtRQUM1QkEsSUFBSUEsQ0FBQ0EsVUFBVUEsR0FBR0EsSUFBSUEsY0FBY0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7SUFDakRBLENBQUNBO0lBRU9ELHlCQUF5QkEsQ0FBQ0EsUUFBZ0JBLEVBQUVBLFFBQWdCQSxFQUFFQSxVQUFtQkEsRUFBRUEsUUFBaUNBO1FBQ3hIRSxFQUFFQSxDQUFDQSxDQUFDQSxPQUFPQSxJQUFJQSxDQUFDQSxVQUFVQSxLQUFLQSxXQUFXQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN6Q0EsSUFBSUEsSUFBSUEsR0FBR0EsRUFBRUEsVUFBVUEsRUFBRUEsUUFBUUEsRUFBRUEsVUFBVUEsRUFBRUEsUUFBUUEsRUFBRUEsWUFBWUEsRUFBRUEsVUFBVUEsRUFBRUEsQ0FBQ0E7WUFDcEZBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLHdCQUF3QkEsQ0FBQ0EsUUFBUUEsRUFBRUEsUUFBUUEsRUFBRUEsVUFBVUEsRUFBRUEsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDdkZBLENBQUNBO1FBQ0RBLElBQUlBLENBQUNBLENBQUNBO1lBQ0ZBLFFBQVFBLENBQUNBLElBQUlBLEtBQUtBLENBQUNBLDZDQUE2Q0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDdkVBLENBQUNBO0lBQ0xBLENBQUNBO0lBT0RGLHNCQUFzQkEsQ0FBQ0EsUUFBZ0JBLEVBQUVBLE1BQWdCQSxFQUFFQSxRQUFpQ0E7UUFFeEZHLElBQUlBLFFBQVFBLEdBQVdBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7UUFDaEVBLElBQUlBLFVBQVVBLEdBQUdBLEtBQUtBLENBQUNBO1FBRXZCQSxJQUFJQSxJQUFJQSxHQUFXQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUFDQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxFQUFFQSxNQUFNQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtRQUN6RkEsSUFBSUEsT0FBT0EsR0FBYUEsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0Esc0JBQXNCQSxDQUFDQSxDQUFDQTtRQUMzREEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsT0FBT0EsSUFBSUEsT0FBT0EsQ0FBQ0EsTUFBTUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDaENBLElBQUlBLENBQUNBLFNBQVNBLEdBQUdBLE9BQU9BLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQzVCQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQTtZQUVsQkEsUUFBUUEsSUFBSUEsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsTUFBTUEsQ0FBQ0E7UUFDdENBLENBQUNBO1FBQ0RBLElBQUlBLENBQUNBLENBQUNBO1lBQ0ZBLE9BQU9BLEdBQUdBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLGtCQUFrQkEsQ0FBQ0EsQ0FBQ0E7WUFDekNBLElBQUlBLENBQUNBLFNBQVNBLEdBQUdBLE9BQU9BLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQzVCQSxVQUFVQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUV2QkEsQ0FBQ0E7UUFDREEsSUFBSUEsQ0FBQ0EseUJBQXlCQSxDQUFDQSxRQUFRQSxFQUFFQSxRQUFRQSxFQUFFQSxVQUFVQSxFQUFFQSxRQUFRQSxDQUFDQSxDQUFDQTtJQUM3RUEsQ0FBQ0E7QUFDTEgsQ0FBQ0E7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFZGl0b3IgZnJvbSAnLi4vLi4vRWRpdG9yJztcbmltcG9ydCBQb3NpdGlvbiBmcm9tICcuLi8uLi9Qb3NpdGlvbidcbmltcG9ydCBFZGl0b3JQb3NpdGlvbiBmcm9tICcuL0VkaXRvclBvc2l0aW9uJztcbmltcG9ydCB7V29ya3NwYWNlfSBmcm9tICcuLi8uLi93b3Jrc3BhY2Uvd29ya3NwYWNlJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21wbGV0aW9uU2VydmljZSB7XG4gICAgcHJpdmF0ZSBfZWRpdG9yOiBFZGl0b3I7XG4gICAgcHJpdmF0ZSBfd29ya3NwYWNlOiBXb3Jrc3BhY2U7XG4gICAgcHJpdmF0ZSBfZWRpdG9yUG9zOiBFZGl0b3JQb3NpdGlvbjtcbiAgICBwdWJsaWMgbWF0Y2hUZXh0OiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZWRpdG9yOiBFZGl0b3IsIHdvcmtzcGFjZTogV29ya3NwYWNlKSB7XG4gICAgICAgIHRoaXMuX2VkaXRvciA9IGVkaXRvcjtcbiAgICAgICAgdGhpcy5fd29ya3NwYWNlID0gd29ya3NwYWNlO1xuICAgICAgICB0aGlzLl9lZGl0b3JQb3MgPSBuZXcgRWRpdG9yUG9zaXRpb24oZWRpdG9yKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9nZXRDb21wbGV0aW9uc0F0UG9zaXRpb24oZmlsZU5hbWU6IHN0cmluZywgcG9zaXRpb246IG51bWJlciwgbWVtYmVyTW9kZTogYm9vbGVhbiwgY2FsbGJhY2s6IChlcnIsIHJlc3VsdHM/KSA9PiB2b2lkKTogdm9pZCB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5fd29ya3NwYWNlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSB7ICdmaWxlTmFtZSc6IGZpbGVOYW1lLCAncG9zaXRpb24nOiBwb3NpdGlvbiwgJ21lbWJlck1vZGUnOiBtZW1iZXJNb2RlIH07XG4gICAgICAgICAgICB0aGlzLl93b3Jrc3BhY2UuZ2V0Q29tcGxldGlvbnNBdFBvc2l0aW9uKGZpbGVOYW1lLCBwb3NpdGlvbiwgbWVtYmVyTW9kZSwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKFwiQ29tcGxldGlvbnMgYXJlIG5vdCBhdmFpbGFibGUgYXQgdGhpcyB0aW1lLlwiKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjb21wbGV0aW9ucyBhdCB0aGUgY3Vyc29yIHBvc2l0aW9uIGFzeW5jaHJvbm91c2x5IGluIGEgY2FsbGFiY2suXG4gICAgICogXG4gICAgICogRklYTUU6IFRoZXJlIGlzIGEgc2lkZS1lZmZlY3Qgb2Ygc2V0dGluZyB0aGUgbWF0Y2hUZXh0IHByb3BlcnR5IHdoaWNoIHNob3VsZCBiZSBwYXJ0IG9mIHRoZSBjYWxsYmFjayByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0Q29tcGxldGlvbnNBdEN1cnNvcihmaWxlTmFtZTogc3RyaW5nLCBjdXJzb3I6IFBvc2l0aW9uLCBjYWxsYmFjazogKGVyciwgcmVzdWx0cz8pID0+IHZvaWQpOiB2b2lkIHtcblxuICAgICAgICB2YXIgcG9zaXRpb246IG51bWJlciA9IHRoaXMuX2VkaXRvclBvcy5nZXRQb3NpdGlvbkNoYXJzKGN1cnNvcik7XG4gICAgICAgIHZhciBtZW1iZXJNb2RlID0gZmFsc2U7XG5cbiAgICAgICAgdmFyIHRleHQ6IHN0cmluZyA9IHRoaXMuX2VkaXRvci5nZXRTZXNzaW9uKCkuZ2V0TGluZShjdXJzb3Iucm93KS5zbGljZSgwLCBjdXJzb3IuY29sdW1uKTtcbiAgICAgICAgdmFyIG1hdGNoZXM6IHN0cmluZ1tdID0gdGV4dC5tYXRjaCgvXFwuKFthLXpBLVpfMC05XFwkXSokKS8pO1xuICAgICAgICBpZiAobWF0Y2hlcyAmJiBtYXRjaGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMubWF0Y2hUZXh0ID0gbWF0Y2hlc1sxXTtcbiAgICAgICAgICAgIG1lbWJlck1vZGUgPSB0cnVlO1xuICAgICAgICAgICAgLy8gQWRqdXN0IHRoZSBwb3NpdGlvbi5cbiAgICAgICAgICAgIHBvc2l0aW9uIC09IHRoaXMubWF0Y2hUZXh0Lmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1hdGNoZXMgPSB0ZXh0Lm1hdGNoKC9bYS16QS1aXzAtOVxcJF0qJC8pO1xuICAgICAgICAgICAgdGhpcy5tYXRjaFRleHQgPSBtYXRjaGVzWzBdO1xuICAgICAgICAgICAgbWVtYmVyTW9kZSA9IGZhbHNlO1xuICAgICAgICAgICAgLy8gTGVhdmUgdGhlIHBvc2l0aW9uIGFzLWlzLlxuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2dldENvbXBsZXRpb25zQXRQb3NpdGlvbihmaWxlTmFtZSwgcG9zaXRpb24sIG1lbWJlck1vZGUsIGNhbGxiYWNrKTtcbiAgICB9XG59XG4iXX0=