"use strict";
import NameStack from "./name-stack";
export var state = {
    option: {},
    cache: {},
    condition: void 0,
    directive: {},
    forinifcheckneeded: false,
    forinifchecks: void 0,
    funct: null,
    ignored: {},
    tab: "",
    lines: [],
    syntax: {},
    jsonMode: false,
    nameStack: new NameStack(),
    tokens: { prev: null, next: null, curr: null },
    inClassBody: false,
    ignoredLines: {},
    isStrict: function () {
        return this.directive["use strict"] || this.inClassBody ||
            this.option.module || this.option.strict === "implied";
    },
    inMoz: function () {
        return this.option.moz;
    },
    inES6: function (strict) {
        if (strict) {
            return this.option.esversion === 6;
        }
        return this.option.moz || this.option.esversion >= 6;
    },
    inES5: function (strict) {
        if (strict) {
            return (!this.option.esversion || this.option.esversion === 5) && !this.option.moz;
        }
        return !this.option.esversion || this.option.esversion >= 5 || this.option.moz;
    },
    reset: function () {
        this.tokens = {
            prev: null,
            next: null,
            curr: null
        };
        this.option = {};
        this.funct = null;
        this.ignored = {};
        this.directive = {};
        this.jsonMode = false;
        this.jsonWarnings = [];
        this.lines = [];
        this.tab = "";
        this.cache = {};
        this.ignoredLines = {};
        this.forinifcheckneeded = false;
        this.nameStack = new NameStack();
        this.inClassBody = false;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kZS9qYXZhc2NyaXB0L3N0YXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztPQUNOLFNBQVMsTUFBTSxjQUFjO0FBRXBDLFdBQVcsS0FBSyxHQXNCWjtJQUNJLE1BQU0sRUFBRSxFQUFFO0lBQ1YsS0FBSyxFQUFFLEVBQUU7SUFDVCxTQUFTLEVBQUUsS0FBSyxDQUFDO0lBQ2pCLFNBQVMsRUFBRSxFQUFFO0lBQ2Isa0JBQWtCLEVBQUUsS0FBSztJQUN6QixhQUFhLEVBQUUsS0FBSyxDQUFDO0lBQ3JCLEtBQUssRUFBRSxJQUFJO0lBQ1gsT0FBTyxFQUFFLEVBQUU7SUFDWCxHQUFHLEVBQUUsRUFBRTtJQUNQLEtBQUssRUFBRSxFQUFFO0lBQ1QsTUFBTSxFQUFFLEVBQUU7SUFDVixRQUFRLEVBQUUsS0FBSztJQUNmLFNBQVMsRUFBRSxJQUFJLFNBQVMsRUFBRTtJQUMxQixNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRTtJQUM5QyxXQUFXLEVBQUUsS0FBSztJQUNsQixZQUFZLEVBQUUsRUFBRTtJQUtoQixRQUFRLEVBQUU7UUFDTixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxJQUFJLENBQUMsV0FBVztZQUNuRCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxTQUFTLENBQUM7SUFDL0QsQ0FBQztJQUlELEtBQUssRUFBRTtRQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztJQUMzQixDQUFDO0lBTUQsS0FBSyxFQUFFLFVBQVMsTUFBZ0I7UUFDNUIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNULE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsS0FBSyxDQUFDLENBQUM7UUFDdkMsQ0FBQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsSUFBSSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQU1ELEtBQUssRUFBRSxVQUFTLE1BQWdCO1FBQzVCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDVCxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDdkYsQ0FBQztRQUNELE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztJQUNuRixDQUFDO0lBR0QsS0FBSyxFQUFFO1FBQ0gsSUFBSSxDQUFDLE1BQU0sR0FBRztZQUNWLElBQUksRUFBRSxJQUFJO1lBQ1YsSUFBSSxFQUFFLElBQUk7WUFDVixJQUFJLEVBQUUsSUFBSTtTQUNiLENBQUM7UUFFRixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNkLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDaEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLFNBQVMsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7Q0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgTmFtZVN0YWNrIGZyb20gXCIuL25hbWUtc3RhY2tcIjtcblxuZXhwb3J0IHZhciBzdGF0ZToge1xuICAgIG9wdGlvbjtcbiAgICBjYWNoZToge307XG4gICAgY29uZGl0aW9uOiBib29sZWFuO1xuICAgIGRpcmVjdGl2ZToge307XG4gICAgZnVuY3Q7XG4gICAgaWdub3JlZDoge307XG4gICAgdGFiOiBzdHJpbmc7XG4gICAgbGluZXM6IHN0cmluZ1tdO1xuICAgIHN5bnRheDogeyBbbmFtZTogc3RyaW5nXTogYW55IH07XG4gICAgZm9yaW5pZmNoZWNrbmVlZGVkOiBib29sZWFuO1xuICAgIGZvcmluaWZjaGVja3M6IGFueVtdO1xuICAgIGlzU3RyaWN0OiAoKSA9PiBib29sZWFuO1xuICAgIGluTW96OiAoKSA9PiBib29sZWFuO1xuICAgIGluRVM2OiAoc3RyaWN0PzogYm9vbGVhbikgPT4gYm9vbGVhbjtcbiAgICBpbkVTNTogKHN0cmljdD86IGJvb2xlYW4pID0+IGJvb2xlYW47XG4gICAgaW5DbGFzc0JvZHk6IGJvb2xlYW47XG4gICAgaWdub3JlZExpbmVzOiB7fSxcbiAgICBqc29uTW9kZTogYm9vbGVhbjtcbiAgICBuYW1lU3RhY2s6IE5hbWVTdGFjaztcbiAgICByZXNldDogKCkgPT4gdm9pZDtcbiAgICB0b2tlbnM6IHsgcHJldjsgbmV4dDsgY3VyciB9O1xufSA9IHtcbiAgICAgICAgb3B0aW9uOiB7fSxcbiAgICAgICAgY2FjaGU6IHt9LFxuICAgICAgICBjb25kaXRpb246IHZvaWQgMCxcbiAgICAgICAgZGlyZWN0aXZlOiB7fSxcbiAgICAgICAgZm9yaW5pZmNoZWNrbmVlZGVkOiBmYWxzZSxcbiAgICAgICAgZm9yaW5pZmNoZWNrczogdm9pZCAwLFxuICAgICAgICBmdW5jdDogbnVsbCxcbiAgICAgICAgaWdub3JlZDoge30sXG4gICAgICAgIHRhYjogXCJcIixcbiAgICAgICAgbGluZXM6IFtdLFxuICAgICAgICBzeW50YXg6IHt9LFxuICAgICAgICBqc29uTW9kZTogZmFsc2UsXG4gICAgICAgIG5hbWVTdGFjazogbmV3IE5hbWVTdGFjaygpLFxuICAgICAgICB0b2tlbnM6IHsgcHJldjogbnVsbCwgbmV4dDogbnVsbCwgY3VycjogbnVsbCB9LFxuICAgICAgICBpbkNsYXNzQm9keTogZmFsc2UsXG4gICAgICAgIGlnbm9yZWRMaW5lczoge30sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIERldGVybWluZSBpZiB0aGUgY29kZSBjdXJyZW50bHkgYmVpbmcgbGludGVkIGlzIHN0cmljdCBtb2RlIGNvZGUuXG4gICAgICAgICAqL1xuICAgICAgICBpc1N0cmljdDogZnVuY3Rpb24oKTogYm9vbGVhbiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kaXJlY3RpdmVbXCJ1c2Ugc3RyaWN0XCJdIHx8IHRoaXMuaW5DbGFzc0JvZHkgfHxcbiAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbi5tb2R1bGUgfHwgdGhpcy5vcHRpb24uc3RyaWN0ID09PSBcImltcGxpZWRcIjtcbiAgICAgICAgfSxcblxuICAgICAgICAvLyBBc3N1bXB0aW9uOiBjaHJvbm9sb2dpY2FsbHkgRVMzIDwgRVM1IDwgRVM2IDwgTW96XG5cbiAgICAgICAgaW5Nb3o6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uLm1vejtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIHtib29sZWFufSBzdHJpY3QgLSBXaGVuIGB0cnVlYCwgb25seSBjb25zaWRlciBFUzYgd2hlbiBpblxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZXN2ZXJzaW9uOiA2XCIgY29kZS5cbiAgICAgICAgICovXG4gICAgICAgIGluRVM2OiBmdW5jdGlvbihzdHJpY3Q/OiBib29sZWFuKSB7XG4gICAgICAgICAgICBpZiAoc3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uLmVzdmVyc2lvbiA9PT0gNjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbi5tb3ogfHwgdGhpcy5vcHRpb24uZXN2ZXJzaW9uID49IDY7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gc3RyaWN0IC0gV2hlbiBgdHJ1ZWAsIHJldHVybiBgdHJ1ZWAgb25seSB3aGVuXG4gICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgZXN2ZXJzaW9uIGlzIGV4YWN0bHkgNVxuICAgICAgICAgKi9cbiAgICAgICAgaW5FUzU6IGZ1bmN0aW9uKHN0cmljdD86IGJvb2xlYW4pIHtcbiAgICAgICAgICAgIGlmIChzdHJpY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCF0aGlzLm9wdGlvbi5lc3ZlcnNpb24gfHwgdGhpcy5vcHRpb24uZXN2ZXJzaW9uID09PSA1KSAmJiAhdGhpcy5vcHRpb24ubW96O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICF0aGlzLm9wdGlvbi5lc3ZlcnNpb24gfHwgdGhpcy5vcHRpb24uZXN2ZXJzaW9uID49IDUgfHwgdGhpcy5vcHRpb24ubW96O1xuICAgICAgICB9LFxuXG5cbiAgICAgICAgcmVzZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy50b2tlbnMgPSB7XG4gICAgICAgICAgICAgICAgcHJldjogbnVsbCxcbiAgICAgICAgICAgICAgICBuZXh0OiBudWxsLFxuICAgICAgICAgICAgICAgIGN1cnI6IG51bGxcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMub3B0aW9uID0ge307XG4gICAgICAgICAgICB0aGlzLmZ1bmN0ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuaWdub3JlZCA9IHt9O1xuICAgICAgICAgICAgdGhpcy5kaXJlY3RpdmUgPSB7fTtcbiAgICAgICAgICAgIHRoaXMuanNvbk1vZGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuanNvbldhcm5pbmdzID0gW107XG4gICAgICAgICAgICB0aGlzLmxpbmVzID0gW107XG4gICAgICAgICAgICB0aGlzLnRhYiA9IFwiXCI7XG4gICAgICAgICAgICB0aGlzLmNhY2hlID0ge307IC8vIE5vZGUuSlMgZG9lc24ndCBoYXZlIE1hcC4gU25pZmYuXG4gICAgICAgICAgICB0aGlzLmlnbm9yZWRMaW5lcyA9IHt9O1xuICAgICAgICAgICAgdGhpcy5mb3JpbmlmY2hlY2tuZWVkZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMubmFtZVN0YWNrID0gbmV3IE5hbWVTdGFjaygpO1xuICAgICAgICAgICAgdGhpcy5pbkNsYXNzQm9keSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiJdfQ==