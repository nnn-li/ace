"use strict";
export default class NameStack {
    constructor() {
        this.pop = function () {
            this._stack.pop();
        };
        this._stack = [];
    }
    get length() {
        return this._stack.length;
    }
    push() {
        this._stack.push(null);
    }
    set(token) {
        this._stack[this.length - 1] = token;
    }
    infer() {
        var nameToken = this._stack[this.length - 1];
        var prefix = "";
        var type;
        if (!nameToken || nameToken.type === "class") {
            nameToken = this._stack[this.length - 2];
        }
        if (!nameToken) {
            return "(empty)";
        }
        type = nameToken.type;
        if (type !== "(string)" && type !== "(number)" && type !== "(identifier)" && type !== "default") {
            return "(expression)";
        }
        if (nameToken.accessorType) {
            prefix = nameToken.accessorType + " ";
        }
        return prefix + nameToken.value;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZS1zdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RlL2phdmFzY3JpcHQvbmFtZS1zdGFjay50cyJdLCJuYW1lcyI6WyJOYW1lU3RhY2siLCJOYW1lU3RhY2suY29uc3RydWN0b3IiLCJOYW1lU3RhY2subGVuZ3RoIiwiTmFtZVN0YWNrLnB1c2giLCJOYW1lU3RhY2suc2V0IiwiTmFtZVN0YWNrLmluZmVyIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFFYjtJQUVJQTtRQW1CQUMsUUFBR0EsR0FBR0E7WUFDRixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLENBQUMsQ0FBQUE7UUFwQkdBLElBQUlBLENBQUNBLE1BQU1BLEdBQUdBLEVBQUVBLENBQUNBO0lBQ3JCQSxDQUFDQTtJQUVERCxJQUFJQSxNQUFNQTtRQUNORSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxNQUFNQSxDQUFDQTtJQUM5QkEsQ0FBQ0E7SUFNREYsSUFBSUE7UUFDQUcsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7SUFDM0JBLENBQUNBO0lBZURILEdBQUdBLENBQUNBLEtBQUtBO1FBQ0xJLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO0lBQ3pDQSxDQUFDQTtJQU9ESixLQUFLQTtRQUNESyxJQUFJQSxTQUFTQSxHQUFHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUM3Q0EsSUFBSUEsTUFBTUEsR0FBR0EsRUFBRUEsQ0FBQ0E7UUFDaEJBLElBQUlBLElBQUlBLENBQUNBO1FBT1RBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLFNBQVNBLElBQUlBLFNBQVNBLENBQUNBLElBQUlBLEtBQUtBLE9BQU9BLENBQUNBLENBQUNBLENBQUNBO1lBQzNDQSxTQUFTQSxHQUFHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUM3Q0EsQ0FBQ0E7UUFFREEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDYkEsTUFBTUEsQ0FBQ0EsU0FBU0EsQ0FBQ0E7UUFDckJBLENBQUNBO1FBRURBLElBQUlBLEdBQUdBLFNBQVNBLENBQUNBLElBQUlBLENBQUNBO1FBRXRCQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxLQUFLQSxVQUFVQSxJQUFJQSxJQUFJQSxLQUFLQSxVQUFVQSxJQUFJQSxJQUFJQSxLQUFLQSxjQUFjQSxJQUFJQSxJQUFJQSxLQUFLQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUM5RkEsTUFBTUEsQ0FBQ0EsY0FBY0EsQ0FBQ0E7UUFDMUJBLENBQUNBO1FBRURBLEVBQUVBLENBQUNBLENBQUNBLFNBQVNBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBLENBQUNBO1lBQ3pCQSxNQUFNQSxHQUFHQSxTQUFTQSxDQUFDQSxZQUFZQSxHQUFHQSxHQUFHQSxDQUFDQTtRQUMxQ0EsQ0FBQ0E7UUFFREEsTUFBTUEsQ0FBQ0EsTUFBTUEsR0FBR0EsU0FBU0EsQ0FBQ0EsS0FBS0EsQ0FBQ0E7SUFDcENBLENBQUNBO0FBQ0xMLENBQUNBO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmFtZVN0YWNrIHtcbiAgICBfc3RhY2s6IGFueVtdO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9zdGFjayA9IFtdO1xuICAgIH1cblxuICAgIGdldCBsZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdGFjay5sZW5ndGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGVudHJ5IGluIHRoZSBzdGFjay4gVXNlZnVsIGZvciB0cmFja2luZyBuYW1lcyBhY3Jvc3NcbiAgICAgKiBleHByZXNzaW9ucy5cbiAgICAgKi9cbiAgICBwdXNoKCkge1xuICAgICAgICB0aGlzLl9zdGFjay5wdXNoKG51bGwpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERpc2NhcmQgdGhlIG1vc3QgcmVjZW50bHktY3JlYXRlZCBuYW1lIG9uIHRoZSBzdGFjay5cbiAgICAgKi9cbiAgICBwb3AgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5fc3RhY2sucG9wKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBtb3N0IHJlY2VudCBuYW1lIG9uIHRoZSB0b3Agb2YgdGhlIHN0YWNrLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHRva2VuIFRoZSB0b2tlbiB0byBjb25zaWRlciBhcyB0aGUgc291cmNlIGZvciB0aGUgbW9zdFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICByZWNlbnQgbmFtZS5cbiAgICAgKi9cbiAgICBzZXQodG9rZW4pIHtcbiAgICAgICAgdGhpcy5fc3RhY2tbdGhpcy5sZW5ndGggLSAxXSA9IHRva2VuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBtb3N0IHJlY2VudCBuYW1lLlxuICAgICAqXG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKi9cbiAgICBpbmZlcigpOiBzdHJpbmcge1xuICAgICAgICB2YXIgbmFtZVRva2VuID0gdGhpcy5fc3RhY2tbdGhpcy5sZW5ndGggLSAxXTtcbiAgICAgICAgdmFyIHByZWZpeCA9IFwiXCI7XG4gICAgICAgIHZhciB0eXBlO1xuXG4gICAgICAgIC8vIER1cmluZyBleHBlY3RlZCBvcGVyYXRpb24sIHRoZSB0b3Btb3N0IGVudHJ5IG9uIHRoZSBzdGFjayB3aWxsIG9ubHlcbiAgICAgICAgLy8gcmVmbGVjdCB0aGUgY3VycmVudCBmdW5jdGlvbidzIG5hbWUgd2hlbiB0aGUgZnVuY3Rpb24gaXMgZGVjbGFyZWQgd2l0aG91dFxuICAgICAgICAvLyB0aGUgYGZ1bmN0aW9uYCBrZXl3b3JkIChpLmUuIGZvciBpbi1saW5lIGFjY2Vzc29yIG1ldGhvZHMpLiBJbiBvdGhlclxuICAgICAgICAvLyBjYXNlcywgdGhlIGBmdW5jdGlvbmAgZXhwcmVzc2lvbiBpdHNlbGYgd2lsbCBpbnRyb2R1Y2UgYW4gZW1wdHkgZW50cnkgb25cbiAgICAgICAgLy8gdGhlIHRvcCBvZiB0aGUgc3RhY2ssIGFuZCB0aGlzIHNob3VsZCBiZSBpZ25vcmVkLlxuICAgICAgICBpZiAoIW5hbWVUb2tlbiB8fCBuYW1lVG9rZW4udHlwZSA9PT0gXCJjbGFzc1wiKSB7XG4gICAgICAgICAgICBuYW1lVG9rZW4gPSB0aGlzLl9zdGFja1t0aGlzLmxlbmd0aCAtIDJdO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFuYW1lVG9rZW4pIHtcbiAgICAgICAgICAgIHJldHVybiBcIihlbXB0eSlcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIHR5cGUgPSBuYW1lVG9rZW4udHlwZTtcblxuICAgICAgICBpZiAodHlwZSAhPT0gXCIoc3RyaW5nKVwiICYmIHR5cGUgIT09IFwiKG51bWJlcilcIiAmJiB0eXBlICE9PSBcIihpZGVudGlmaWVyKVwiICYmIHR5cGUgIT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gXCIoZXhwcmVzc2lvbilcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuYW1lVG9rZW4uYWNjZXNzb3JUeXBlKSB7XG4gICAgICAgICAgICBwcmVmaXggPSBuYW1lVG9rZW4uYWNjZXNzb3JUeXBlICsgXCIgXCI7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcHJlZml4ICsgbmFtZVRva2VuLnZhbHVlO1xuICAgIH1cbn1cbiJdfQ==