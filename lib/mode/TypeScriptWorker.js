"use strict";
import { mixin } from '../lib/oop';
import Mirror from '../worker/Mirror';
export class TypeScriptWorker extends Mirror {
    constructor(sender) {
        super(sender, 500);
        this.setOptions();
        sender.emit('initAfter');
    }
    setOptions(options) {
        this.options = options || {};
    }
    changeOptions(newOptions) {
        mixin(this.options, newOptions);
        this.deferredUpdate.schedule(100);
    }
    onUpdate() {
        this.sender.emit("compiled");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHlwZVNjcmlwdFdvcmtlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlL1R5cGVTY3JpcHRXb3JrZXIudHMiXSwibmFtZXMiOlsiVHlwZVNjcmlwdFdvcmtlciIsIlR5cGVTY3JpcHRXb3JrZXIuY29uc3RydWN0b3IiLCJUeXBlU2NyaXB0V29ya2VyLnNldE9wdGlvbnMiLCJUeXBlU2NyaXB0V29ya2VyLmNoYW5nZU9wdGlvbnMiLCJUeXBlU2NyaXB0V29ya2VyLm9uVXBkYXRlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7T0FFTixFQUFDLEtBQUssRUFBQyxNQUFNLFlBQVk7T0FDekIsTUFBTSxNQUFNLGtCQUFrQjtBQVdyQyxzQ0FBc0MsTUFBTTtJQWF4Q0EsWUFBWUEsTUFBY0E7UUFDdEJDLE1BQU1BLE1BQU1BLEVBQUVBLEdBQUdBLENBQUNBLENBQUNBO1FBRW5CQSxJQUFJQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUFDQTtRQUVsQkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0E7SUFDN0JBLENBQUNBO0lBUU9ELFVBQVVBLENBQUNBLE9BQVFBO1FBQ3ZCRSxJQUFJQSxDQUFDQSxPQUFPQSxHQUFHQSxPQUFPQSxJQUFJQSxFQUFFQSxDQUFDQTtJQUNqQ0EsQ0FBQ0E7SUFRT0YsYUFBYUEsQ0FBQ0EsVUFBVUE7UUFDNUJHLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLEVBQUVBLFVBQVVBLENBQUNBLENBQUNBO1FBQ2hDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxRQUFRQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQTtJQUN0Q0EsQ0FBQ0E7SUFNTUgsUUFBUUE7UUFFWEksSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0E7SUFDakNBLENBQUNBO0FBQ0xKLENBQUNBO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHttaXhpbn0gZnJvbSAnLi4vbGliL29vcCc7XG5pbXBvcnQgTWlycm9yIGZyb20gJy4uL3dvcmtlci9NaXJyb3InO1xuaW1wb3J0IEVkaXRvckRvY3VtZW50IGZyb20gJy4uL0VkaXRvckRvY3VtZW50JztcbmltcG9ydCBTZW5kZXIgZnJvbSBcIi4uL2xpYi9TZW5kZXJcIjtcblxuLyoqXG4gKiBEb2Vzbid0IHJlYWxseSBkbyBtdWNoIGJlY2F1c2UgVHlwZVNjcmlwdCByZXF1aXJlcyB0aGUgY29uY2VwdCBvZiBhIHdvcmtzcGFjZS5cbiAqIFxuICogSG93ZXZlciwgZG9lcyBwcm92aWRlIHNvbWUgbm90aWZpY2F0aW9ucyB0byB0cmlnZ2VyIGZ1cnRoZXIgYWN0aW9ucy5cbiAqIEBjbGFzcyBUeXBlU2NyaXB0V29ya2VyXG4gKiBAZXh0ZW5kcyBNaXJyb3JcbiAqL1xuZXhwb3J0IGNsYXNzIFR5cGVTY3JpcHRXb3JrZXIgZXh0ZW5kcyBNaXJyb3Ige1xuXG4gICAgLyoqXG4gICAgICogQHByb3BlcnR5IG9wdGlvbnNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHByaXZhdGUgb3B0aW9ucztcblxuICAgIC8qKlxuICAgICAqIEBjbGFzcyBUeXBlU2NyaXB0V29ya2VyXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHNlbmRlciB7U2VuZGVyfVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNlbmRlcjogU2VuZGVyKSB7XG4gICAgICAgIHN1cGVyKHNlbmRlciwgNTAwKTtcblxuICAgICAgICB0aGlzLnNldE9wdGlvbnMoKTtcblxuICAgICAgICBzZW5kZXIuZW1pdCgnaW5pdEFmdGVyJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBzZXRPcHRpb25zXG4gICAgICogQHBhcmFtIFtvcHRpb25zXVxuICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBwcml2YXRlIHNldE9wdGlvbnMob3B0aW9ucz8pIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGNoYW5nZU9wdGlvbnNcbiAgICAgKiBAcGFyYW0gbmV3T3B0aW9uc1xuICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBwcml2YXRlIGNoYW5nZU9wdGlvbnMobmV3T3B0aW9ucyk6IHZvaWQge1xuICAgICAgICBtaXhpbih0aGlzLm9wdGlvbnMsIG5ld09wdGlvbnMpO1xuICAgICAgICB0aGlzLmRlZmVycmVkVXBkYXRlLnNjaGVkdWxlKDEwMCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBvblVwZGF0ZVxuICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICovXG4gICAgcHVibGljIG9uVXBkYXRlKCk6IHZvaWQge1xuICAgICAgICAvLyBUaGUgbm9ybWFsIGJlaGF2aW91ciBoZXJlIGlzIHRvIHBlcmZvcm0gYSBzeW50YXggY2hlY2sgYW5kIHJlcG9ydCBhbm5vdGF0aW9ucy4gXG4gICAgICAgIHRoaXMuc2VuZGVyLmVtaXQoXCJjb21waWxlZFwiKTtcbiAgICB9XG59XG4iXX0=