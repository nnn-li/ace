var asserts = require('./asserts');
var base = require('./base');
var TokenError = (function () {
    function TokenError(message, fileName, lineNumber, columnNumber) {
        this.name = 'TokenError';
        asserts.assert(base.isString(message), "message must be a string");
        asserts.assert(base.isString(fileName), "fileName must be a string");
        asserts.assert(base.isNumber(lineNumber), "lineNumber must be a number");
        asserts.assert(base.isNumber(columnNumber), "columnNumber must be a number");
        this.message = message;
        this.fileName = fileName;
        this.lineNumber = lineNumber;
        this.columnNumber = columnNumber;
    }
    return TokenError;
})();
module.exports = TokenError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5FcnJvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RlL3B5dGhvbi9Ub2tlbkVycm9yLnRzIl0sIm5hbWVzIjpbIlRva2VuRXJyb3IiLCJUb2tlbkVycm9yLmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLE9BQU8sV0FBVyxXQUFXLENBQUMsQ0FBQztBQUN0QyxJQUFPLElBQUksV0FBVyxRQUFRLENBQUMsQ0FBQztBQUVoQztJQVFJQSxvQkFBWUEsT0FBZUEsRUFBRUEsUUFBZ0JBLEVBQUVBLFVBQWtCQSxFQUFFQSxZQUFvQkE7UUFOaEZDLFNBQUlBLEdBQVdBLFlBQVlBLENBQUNBO1FBUS9CQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxPQUFPQSxDQUFDQSxFQUFFQSwwQkFBMEJBLENBQUNBLENBQUNBO1FBQ25FQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxRQUFRQSxDQUFDQSxFQUFFQSwyQkFBMkJBLENBQUNBLENBQUNBO1FBQ3JFQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxVQUFVQSxDQUFDQSxFQUFFQSw2QkFBNkJBLENBQUNBLENBQUNBO1FBQ3pFQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxZQUFZQSxDQUFDQSxFQUFFQSwrQkFBK0JBLENBQUNBLENBQUNBO1FBRTdFQSxJQUFJQSxDQUFDQSxPQUFPQSxHQUFHQSxPQUFPQSxDQUFDQTtRQUN2QkEsSUFBSUEsQ0FBQ0EsUUFBUUEsR0FBR0EsUUFBUUEsQ0FBQ0E7UUFDekJBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBLFVBQVVBLENBQUNBO1FBQzdCQSxJQUFJQSxDQUFDQSxZQUFZQSxHQUFHQSxZQUFZQSxDQUFDQTtJQUNyQ0EsQ0FBQ0E7SUFDTEQsaUJBQUNBO0FBQURBLENBQUNBLEFBcEJELElBb0JDO0FBRUQsaUJBQVMsVUFBVSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydHMgPSByZXF1aXJlKCcuL2Fzc2VydHMnKTtcbmltcG9ydCBiYXNlID0gcmVxdWlyZSgnLi9iYXNlJyk7XG5cbmNsYXNzIFRva2VuRXJyb3JcbntcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nID0gJ1Rva2VuRXJyb3InO1xuICAgIHB1YmxpYyBtZXNzYWdlOiBzdHJpbmc7XG4gICAgcHVibGljIGZpbGVOYW1lOiBzdHJpbmc7XG4gICAgcHVibGljIGxpbmVOdW1iZXI6IG51bWJlcjtcbiAgICBwdWJsaWMgY29sdW1uTnVtYmVyOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcsIGZpbGVOYW1lOiBzdHJpbmcsIGxpbmVOdW1iZXI6IG51bWJlciwgY29sdW1uTnVtYmVyOiBudW1iZXIpXG4gICAge1xuICAgICAgICBhc3NlcnRzLmFzc2VydChiYXNlLmlzU3RyaW5nKG1lc3NhZ2UpLCBcIm1lc3NhZ2UgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICAgICAgYXNzZXJ0cy5hc3NlcnQoYmFzZS5pc1N0cmluZyhmaWxlTmFtZSksIFwiZmlsZU5hbWUgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICAgICAgYXNzZXJ0cy5hc3NlcnQoYmFzZS5pc051bWJlcihsaW5lTnVtYmVyKSwgXCJsaW5lTnVtYmVyIG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgICAgIGFzc2VydHMuYXNzZXJ0KGJhc2UuaXNOdW1iZXIoY29sdW1uTnVtYmVyKSwgXCJjb2x1bW5OdW1iZXIgbXVzdCBiZSBhIG51bWJlclwiKTtcblxuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLmZpbGVOYW1lID0gZmlsZU5hbWU7XG4gICAgICAgIHRoaXMubGluZU51bWJlciA9IGxpbmVOdW1iZXI7XG4gICAgICAgIHRoaXMuY29sdW1uTnVtYmVyID0gY29sdW1uTnVtYmVyO1xuICAgIH1cbn1cblxuZXhwb3J0ID0gVG9rZW5FcnJvcjsiXX0=