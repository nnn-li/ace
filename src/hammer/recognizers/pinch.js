import { ContinuousRecognizer } from './attribute';
import { STATE_BEGAN, TOUCH_ACTION_NONE } from '../hammer';
export class PinchRecognizer extends ContinuousRecognizer {
    constructor(eventName, enabled) {
        super(eventName, enabled, 2);
        this.threshold = 2;
        this.scale = 1;
    }
    getTouchAction() {
        return [TOUCH_ACTION_NONE];
    }
    attributeTest(input) {
        var isBegan = (this.state & STATE_BEGAN) > 0;
        this.scale = input.scale;
        return super.attributeTest(input) && (Math.abs(this.scale - 1) > this.threshold || isBegan);
    }
    emit() {
        if (this.scale !== 1) {
            var inOut = this.scale < 1 ? 'in' : 'out';
            var event = new Event('pinch');
            this.manager.emit(this.eventName + inOut, event);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluY2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwaW5jaC50cyJdLCJuYW1lcyI6WyJQaW5jaFJlY29nbml6ZXIiLCJQaW5jaFJlY29nbml6ZXIuY29uc3RydWN0b3IiLCJQaW5jaFJlY29nbml6ZXIuZ2V0VG91Y2hBY3Rpb24iLCJQaW5jaFJlY29nbml6ZXIuYXR0cmlidXRlVGVzdCIsIlBpbmNoUmVjb2duaXplci5lbWl0Il0sIm1hcHBpbmdzIjoiT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sYUFBYTtPQUN6QyxFQUFpQixXQUFXLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxXQUFXO0FBUXhFLHFDQUFxQyxvQkFBb0I7SUFHckRBLFlBQVlBLFNBQWlCQSxFQUFFQSxPQUFnQkE7UUFDM0NDLE1BQU1BLFNBQVNBLEVBQUVBLE9BQU9BLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO1FBSHpCQSxjQUFTQSxHQUFHQSxDQUFDQSxDQUFDQTtRQUNkQSxVQUFLQSxHQUFHQSxDQUFDQSxDQUFDQTtJQUdsQkEsQ0FBQ0E7SUFDREQsY0FBY0E7UUFDVkUsTUFBTUEsQ0FBQ0EsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxDQUFDQTtJQUMvQkEsQ0FBQ0E7SUFDREYsYUFBYUEsQ0FBQ0EsS0FBcUJBO1FBQy9CRyxJQUFJQSxPQUFPQSxHQUFZQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxHQUFHQSxXQUFXQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQTtRQUN0REEsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FBQ0E7UUFDekJBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLGFBQWFBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLFNBQVNBLElBQUlBLE9BQU9BLENBQUNBLENBQUNBO0lBQ2hHQSxDQUFDQTtJQUNESCxJQUFJQTtRQUNBSSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNuQkEsSUFBSUEsS0FBS0EsR0FBR0EsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsQ0FBQ0EsR0FBR0EsSUFBSUEsR0FBR0EsS0FBS0EsQ0FBQ0E7WUFDMUNBLElBQUlBLEtBQUtBLEdBQUdBLElBQUlBLEtBQUtBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO1lBQy9CQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxTQUFTQSxHQUFHQSxLQUFLQSxFQUFFQSxLQUFLQSxDQUFDQSxDQUFDQTtRQUNyREEsQ0FBQ0E7SUFDTEEsQ0FBQ0E7QUFDTEosQ0FBQ0E7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29udGludW91c1JlY29nbml6ZXJ9IGZyb20gJy4vYXR0cmlidXRlJztcbmltcG9ydCB7SUNvbXB1dGVkRXZlbnQsIFNUQVRFX0JFR0FOLCBUT1VDSF9BQ1RJT05fTk9ORX0gZnJvbSAnLi4vaGFtbWVyJztcblxuLyoqXG4gKiBQaW5jaFxuICogUmVjb2duaXplZCB3aGVuIHR3byBvciBtb3JlIHBvaW50ZXJzIGFyZSBtb3ZpbmcgdG93YXJkICh6b29tLWluKSBvciBhd2F5IGZyb20gZWFjaCBvdGhlciAoem9vbS1vdXQpLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBDb250aW51b3VzUmVjb2duaXplclxuICovXG5leHBvcnQgY2xhc3MgUGluY2hSZWNvZ25pemVyIGV4dGVuZHMgQ29udGludW91c1JlY29nbml6ZXIge1xuICAgIHByaXZhdGUgdGhyZXNob2xkID0gMjtcbiAgICBwcml2YXRlIHNjYWxlID0gMTtcbiAgICBjb25zdHJ1Y3RvcihldmVudE5hbWU6IHN0cmluZywgZW5hYmxlZDogYm9vbGVhbikge1xuICAgICAgICBzdXBlcihldmVudE5hbWUsIGVuYWJsZWQsIDIpO1xuICAgIH1cbiAgICBnZXRUb3VjaEFjdGlvbigpOiBzdHJpbmdbXSB7XG4gICAgICAgIHJldHVybiBbVE9VQ0hfQUNUSU9OX05PTkVdO1xuICAgIH1cbiAgICBhdHRyaWJ1dGVUZXN0KGlucHV0OiBJQ29tcHV0ZWRFdmVudCk6IGJvb2xlYW4ge1xuICAgICAgICB2YXIgaXNCZWdhbjogYm9vbGVhbiA9ICh0aGlzLnN0YXRlICYgU1RBVEVfQkVHQU4pID4gMDtcbiAgICAgICAgdGhpcy5zY2FsZSA9IGlucHV0LnNjYWxlO1xuICAgICAgICByZXR1cm4gc3VwZXIuYXR0cmlidXRlVGVzdChpbnB1dCkgJiYgKE1hdGguYWJzKHRoaXMuc2NhbGUgLSAxKSA+IHRoaXMudGhyZXNob2xkIHx8IGlzQmVnYW4pO1xuICAgIH1cbiAgICBlbWl0KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zY2FsZSAhPT0gMSkge1xuICAgICAgICAgICAgdmFyIGluT3V0ID0gdGhpcy5zY2FsZSA8IDEgPyAnaW4nIDogJ291dCc7XG4gICAgICAgICAgICB2YXIgZXZlbnQgPSBuZXcgRXZlbnQoJ3BpbmNoJyk7XG4gICAgICAgICAgICB0aGlzLm1hbmFnZXIuZW1pdCh0aGlzLmV2ZW50TmFtZSArIGluT3V0LCBldmVudCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=