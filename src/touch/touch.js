import { DIRECTION_VERTICAL, Manager } from '../hammer/hammer';
import { PanRecognizer } from '../hammer/recognizers/pan';
import { TapRecognizer } from '../hammer/recognizers/tap';
export function touchManager(editor) {
    var target = editor.renderer.getMouseEventTarget();
    var manager = new Manager(target);
    manager.add(new PanRecognizer('pan', true).setDirection(DIRECTION_VERTICAL).setThreshold(20));
    manager.add(new TapRecognizer('tap', true));
    manager.on('pan', function (movement) {
        editor.renderer.scrollBy(-movement.x, -movement.y);
    });
    manager.on('tap', function (event) {
        var pos = editor.renderer.screenToTextCoordinates(event.clientX, event.clientY);
        pos.row = Math.max(0, Math.min(pos.row, editor.getSession().getLength() - 1));
        editor.moveCursorToPosition(pos);
        editor.renderer.scrollCursorIntoView();
        editor.focus();
    });
    return manager;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG91Y2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0b3VjaC50cyJdLCJuYW1lcyI6WyJ0b3VjaE1hbmFnZXIiXSwibWFwcGluZ3MiOiJPQUdPLEVBRVAsa0JBQWtCLEVBQ2xCLE9BQU8sRUFFTixNQUFNLGtCQUFrQjtPQUNsQixFQUFDLGFBQWEsRUFBQyxNQUFNLDJCQUEyQjtPQUtoRCxFQUFDLGFBQWEsRUFBQyxNQUFNLDJCQUEyQjtBQWtCdkQsNkJBQTZCLE1BQWM7SUFFdkNBLElBQUlBLE1BQU1BLEdBQW1CQSxNQUFNQSxDQUFDQSxRQUFRQSxDQUFDQSxtQkFBbUJBLEVBQUVBLENBQUNBO0lBQ25FQSxJQUFJQSxPQUFPQSxHQUFHQSxJQUFJQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQTtJQUVsQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsYUFBYUEsQ0FBQ0EsS0FBS0EsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsWUFBWUEsQ0FBQ0Esa0JBQWtCQSxDQUFDQSxDQUFDQSxZQUFZQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUM5RkEsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsYUFBYUEsQ0FBQ0EsS0FBS0EsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFNUNBLE9BQU9BLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLEVBQUVBLFVBQVNBLFFBQWtCQTtRQUN6QyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkQsQ0FBQyxDQUFDQSxDQUFDQTtJQUVIQSxPQUFPQSxDQUFDQSxFQUFFQSxDQUFDQSxLQUFLQSxFQUFFQSxVQUFTQSxLQUFxQkE7UUFDNUMsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyx1QkFBdUIsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVoRixHQUFHLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUU5RSxNQUFNLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1FBQ3ZDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNuQixDQUFDLENBQUNBLENBQUNBO0lBRUhBLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBO0FBQ25CQSxDQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7fSBmcm9tIFwiLi4vbGliL3VzZXJhZ2VudFwiO1xuaW1wb3J0IEVkaXRvciBmcm9tICcuLi9FZGl0b3InO1xuaW1wb3J0IHt9IGZyb20gJy4uL2xpYi9ldmVudCc7XG5pbXBvcnQge1xuQ2xpZW50TG9jYXRpb24sXG5ESVJFQ1RJT05fVkVSVElDQUwsXG5NYW5hZ2VyLFxuVmVjdG9yRTJcbn0gZnJvbSAnLi4vaGFtbWVyL2hhbW1lcic7XG5pbXBvcnQge1BhblJlY29nbml6ZXJ9IGZyb20gJy4uL2hhbW1lci9yZWNvZ25pemVycy9wYW4nO1xuaW1wb3J0IHt9IGZyb20gJy4uL2hhbW1lci9yZWNvZ25pemVycy9waW5jaCc7XG5pbXBvcnQge30gZnJvbSAnLi4vaGFtbWVyL3JlY29nbml6ZXJzL3ByZXNzJztcbmltcG9ydCB7fSBmcm9tICcuLi9oYW1tZXIvcmVjb2duaXplcnMvcm90YXRlJztcbmltcG9ydCB7fSBmcm9tICcuLi9oYW1tZXIvcmVjb2duaXplcnMvc3dpcGUnO1xuaW1wb3J0IHtUYXBSZWNvZ25pemVyfSBmcm9tICcuLi9oYW1tZXIvcmVjb2duaXplcnMvdGFwJztcblxuLy8gSXQgc2VlbXMgdGhhdCBUeXBlU2NyaXB0IDEuMC4wIGRvZXNuJ3Qga25vdyBhYm91dCBUb3VjaEV2ZW50LlxuLy8gVGhpcyBzaG91bGQgbW90aXZhdGUgdGhlIHVwZ3JhZGUgb2YgVHlwZVNjcmlwdCBhbmQgaGFja2luZyBmb3IgQUNFLlxuZXhwb3J0IGludGVyZmFjZSBJVG91Y2gge1xuICAgIGNsaWVudFg6IG51bWJlcjtcbiAgICBjbGllbnRZOiBudW1iZXI7XG4gICAgcGFnZVg6IG51bWJlcjtcbiAgICBwYWdlWTogbnVtYmVyO1xuICAgIHNjcmVlblg6IG51bWJlcjtcbiAgICBzY3JlZW5ZOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVRvdWNoRXZlbnQgZXh0ZW5kcyBFdmVudCB7XG4gICAgdHlwZTogc3RyaW5nO1xuICAgIHRvdWNoZXM6IElUb3VjaFtdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG91Y2hNYW5hZ2VyKGVkaXRvcjogRWRpdG9yKSB7XG5cbiAgICB2YXIgdGFyZ2V0OiBIVE1MRGl2RWxlbWVudCA9IGVkaXRvci5yZW5kZXJlci5nZXRNb3VzZUV2ZW50VGFyZ2V0KCk7XG4gICAgdmFyIG1hbmFnZXIgPSBuZXcgTWFuYWdlcih0YXJnZXQpO1xuXG4gICAgbWFuYWdlci5hZGQobmV3IFBhblJlY29nbml6ZXIoJ3BhbicsIHRydWUpLnNldERpcmVjdGlvbihESVJFQ1RJT05fVkVSVElDQUwpLnNldFRocmVzaG9sZCgyMCkpO1xuICAgIG1hbmFnZXIuYWRkKG5ldyBUYXBSZWNvZ25pemVyKCd0YXAnLCB0cnVlKSk7XG5cbiAgICBtYW5hZ2VyLm9uKCdwYW4nLCBmdW5jdGlvbihtb3ZlbWVudDogVmVjdG9yRTIpIHtcbiAgICAgICAgZWRpdG9yLnJlbmRlcmVyLnNjcm9sbEJ5KC1tb3ZlbWVudC54LCAtbW92ZW1lbnQueSk7XG4gICAgfSk7XG5cbiAgICBtYW5hZ2VyLm9uKCd0YXAnLCBmdW5jdGlvbihldmVudDogQ2xpZW50TG9jYXRpb24pIHtcbiAgICAgICAgdmFyIHBvcyA9IGVkaXRvci5yZW5kZXJlci5zY3JlZW5Ub1RleHRDb29yZGluYXRlcyhldmVudC5jbGllbnRYLCBldmVudC5jbGllbnRZKTtcblxuICAgICAgICBwb3Mucm93ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4ocG9zLnJvdywgZWRpdG9yLmdldFNlc3Npb24oKS5nZXRMZW5ndGgoKSAtIDEpKTtcblxuICAgICAgICBlZGl0b3IubW92ZUN1cnNvclRvUG9zaXRpb24ocG9zKTtcbiAgICAgICAgZWRpdG9yLnJlbmRlcmVyLnNjcm9sbEN1cnNvckludG9WaWV3KCk7XG4gICAgICAgIGVkaXRvci5mb2N1cygpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG1hbmFnZXI7XG59XG4iXX0=