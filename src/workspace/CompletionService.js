"use strict";
import EditorPosition from './EditorPosition';
export default class CompletionService {
    constructor(editor, workspace) {
        this._editor = editor;
        this._workspace = workspace;
        this._editorPos = new EditorPosition(editor);
    }
    _getCompletionsAtPosition(fileName, position, memberMode) {
        if (typeof this._workspace !== 'undefined') {
            var args = { 'fileName': fileName, 'position': position, 'memberMode': memberMode };
            this._workspace.getCompletionsAtPosition(fileName, position, memberMode);
        }
        else {
            return new Promise(function (resolve, reject) {
                reject(new Error("Completions are not available at this time."));
            });
        }
    }
    getCompletionsAtCursor(fileName, cursor) {
        var position = this._editorPos.getPositionChars(cursor);
        var memberMode = false;
        var text = this._editor.getSession().getLine(cursor.row).slice(0, cursor.column);
        var matches = text.match(/\.([a-zA-Z_0-9\$]*$)/);
        if (matches && matches.length > 0) {
            this.matchText = matches[1];
            memberMode = true;
            position -= this.matchText.length;
        }
        else {
            matches = text.match(/[a-zA-Z_0-9\$]*$/);
            this.matchText = matches[0];
            memberMode = false;
        }
        return this._getCompletionsAtPosition(fileName, position, memberMode);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcGxldGlvblNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDb21wbGV0aW9uU2VydmljZS50cyJdLCJuYW1lcyI6WyJDb21wbGV0aW9uU2VydmljZSIsIkNvbXBsZXRpb25TZXJ2aWNlLmNvbnN0cnVjdG9yIiwiQ29tcGxldGlvblNlcnZpY2UuX2dldENvbXBsZXRpb25zQXRQb3NpdGlvbiIsIkNvbXBsZXRpb25TZXJ2aWNlLmdldENvbXBsZXRpb25zQXRDdXJzb3IiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztPQUlOLGNBQWMsTUFBTSxrQkFBa0I7QUFJN0M7SUFLSUEsWUFBWUEsTUFBY0EsRUFBRUEsU0FBb0JBO1FBQzVDQyxJQUFJQSxDQUFDQSxPQUFPQSxHQUFHQSxNQUFNQSxDQUFDQTtRQUN0QkEsSUFBSUEsQ0FBQ0EsVUFBVUEsR0FBR0EsU0FBU0EsQ0FBQ0E7UUFDNUJBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBLElBQUlBLGNBQWNBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO0lBQ2pEQSxDQUFDQTtJQUVPRCx5QkFBeUJBLENBQUNBLFFBQWdCQSxFQUFFQSxRQUFnQkEsRUFBRUEsVUFBbUJBO1FBQ3JGRSxFQUFFQSxDQUFDQSxDQUFDQSxPQUFPQSxJQUFJQSxDQUFDQSxVQUFVQSxLQUFLQSxXQUFXQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN6Q0EsSUFBSUEsSUFBSUEsR0FBR0EsRUFBRUEsVUFBVUEsRUFBRUEsUUFBUUEsRUFBRUEsVUFBVUEsRUFBRUEsUUFBUUEsRUFBRUEsWUFBWUEsRUFBRUEsVUFBVUEsRUFBRUEsQ0FBQ0E7WUFDcEZBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLHdCQUF3QkEsQ0FBQ0EsUUFBUUEsRUFBRUEsUUFBUUEsRUFBRUEsVUFBVUEsQ0FBQ0EsQ0FBQ0E7UUFDN0VBLENBQUNBO1FBQ0RBLElBQUlBLENBQUNBLENBQUNBO1lBQ0ZBLE1BQU1BLENBQUNBLElBQUlBLE9BQU9BLENBQWVBLFVBQVNBLE9BQU9BLEVBQUVBLE1BQU1BO2dCQUNyRCxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsNkNBQTZDLENBQUMsQ0FBQyxDQUFDO1lBQ3JFLENBQUMsQ0FBQ0EsQ0FBQ0E7UUFDUEEsQ0FBQ0E7SUFDTEEsQ0FBQ0E7SUFPREYsc0JBQXNCQSxDQUFDQSxRQUFnQkEsRUFBRUEsTUFBZ0JBO1FBRXJERyxJQUFJQSxRQUFRQSxHQUFXQSxJQUFJQSxDQUFDQSxVQUFVQSxDQUFDQSxnQkFBZ0JBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO1FBQ2hFQSxJQUFJQSxVQUFVQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUV2QkEsSUFBSUEsSUFBSUEsR0FBV0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBVUEsRUFBRUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsRUFBRUEsTUFBTUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7UUFDekZBLElBQUlBLE9BQU9BLEdBQWFBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLHNCQUFzQkEsQ0FBQ0EsQ0FBQ0E7UUFDM0RBLEVBQUVBLENBQUNBLENBQUNBLE9BQU9BLElBQUlBLE9BQU9BLENBQUNBLE1BQU1BLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2hDQSxJQUFJQSxDQUFDQSxTQUFTQSxHQUFHQSxPQUFPQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUM1QkEsVUFBVUEsR0FBR0EsSUFBSUEsQ0FBQ0E7WUFFbEJBLFFBQVFBLElBQUlBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLE1BQU1BLENBQUNBO1FBQ3RDQSxDQUFDQTtRQUNEQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUNGQSxPQUFPQSxHQUFHQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxrQkFBa0JBLENBQUNBLENBQUNBO1lBQ3pDQSxJQUFJQSxDQUFDQSxTQUFTQSxHQUFHQSxPQUFPQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUM1QkEsVUFBVUEsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFFdkJBLENBQUNBO1FBQ0RBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLHlCQUF5QkEsQ0FBQ0EsUUFBUUEsRUFBRUEsUUFBUUEsRUFBRUEsVUFBVUEsQ0FBQ0EsQ0FBQ0E7SUFDMUVBLENBQUNBO0FBQ0xILENBQUNBO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IENvbXBsZXRpb24gZnJvbSAnLi4vQ29tcGxldGlvbic7XG5pbXBvcnQgRWRpdG9yIGZyb20gJy4uL0VkaXRvcic7XG5pbXBvcnQgRWRpdG9yUG9zaXRpb24gZnJvbSAnLi9FZGl0b3JQb3NpdGlvbic7XG5pbXBvcnQgUG9zaXRpb24gZnJvbSAnLi4vUG9zaXRpb24nO1xuaW1wb3J0IFdvcmtzcGFjZSBmcm9tICcuL1dvcmtzcGFjZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbXBsZXRpb25TZXJ2aWNlIHtcbiAgICBwcml2YXRlIF9lZGl0b3I6IEVkaXRvcjtcbiAgICBwcml2YXRlIF93b3Jrc3BhY2U6IFdvcmtzcGFjZTtcbiAgICBwcml2YXRlIF9lZGl0b3JQb3M6IEVkaXRvclBvc2l0aW9uO1xuICAgIHB1YmxpYyBtYXRjaFRleHQ6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihlZGl0b3I6IEVkaXRvciwgd29ya3NwYWNlOiBXb3Jrc3BhY2UpIHtcbiAgICAgICAgdGhpcy5fZWRpdG9yID0gZWRpdG9yO1xuICAgICAgICB0aGlzLl93b3Jrc3BhY2UgPSB3b3Jrc3BhY2U7XG4gICAgICAgIHRoaXMuX2VkaXRvclBvcyA9IG5ldyBFZGl0b3JQb3NpdGlvbihlZGl0b3IpO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2dldENvbXBsZXRpb25zQXRQb3NpdGlvbihmaWxlTmFtZTogc3RyaW5nLCBwb3NpdGlvbjogbnVtYmVyLCBtZW1iZXJNb2RlOiBib29sZWFuKTogUHJvbWlzZTxDb21wbGV0aW9uW10+IHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLl93b3Jrc3BhY2UgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB2YXIgYXJncyA9IHsgJ2ZpbGVOYW1lJzogZmlsZU5hbWUsICdwb3NpdGlvbic6IHBvc2l0aW9uLCAnbWVtYmVyTW9kZSc6IG1lbWJlck1vZGUgfTtcbiAgICAgICAgICAgIHRoaXMuX3dvcmtzcGFjZS5nZXRDb21wbGV0aW9uc0F0UG9zaXRpb24oZmlsZU5hbWUsIHBvc2l0aW9uLCBtZW1iZXJNb2RlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZTxDb21wbGV0aW9uW10+KGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJDb21wbGV0aW9ucyBhcmUgbm90IGF2YWlsYWJsZSBhdCB0aGlzIHRpbWUuXCIpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY29tcGxldGlvbnMgYXQgdGhlIGN1cnNvciBwb3NpdGlvbiBhc3luY2hyb25vdXNseSBpbiBhIGNhbGxhYmNrLlxuICAgICAqIFxuICAgICAqIEZJWE1FOiBUaGVyZSBpcyBhIHNpZGUtZWZmZWN0IG9mIHNldHRpbmcgdGhlIG1hdGNoVGV4dCBwcm9wZXJ0eSB3aGljaCBzaG91bGQgYmUgcGFydCBvZiB0aGUgY2FsbGJhY2sgcmVzdWx0LlxuICAgICAqL1xuICAgIGdldENvbXBsZXRpb25zQXRDdXJzb3IoZmlsZU5hbWU6IHN0cmluZywgY3Vyc29yOiBQb3NpdGlvbik6IFByb21pc2U8Q29tcGxldGlvbltdPiB7XG5cbiAgICAgICAgdmFyIHBvc2l0aW9uOiBudW1iZXIgPSB0aGlzLl9lZGl0b3JQb3MuZ2V0UG9zaXRpb25DaGFycyhjdXJzb3IpO1xuICAgICAgICB2YXIgbWVtYmVyTW9kZSA9IGZhbHNlO1xuXG4gICAgICAgIHZhciB0ZXh0OiBzdHJpbmcgPSB0aGlzLl9lZGl0b3IuZ2V0U2Vzc2lvbigpLmdldExpbmUoY3Vyc29yLnJvdykuc2xpY2UoMCwgY3Vyc29yLmNvbHVtbik7XG4gICAgICAgIHZhciBtYXRjaGVzOiBzdHJpbmdbXSA9IHRleHQubWF0Y2goL1xcLihbYS16QS1aXzAtOVxcJF0qJCkvKTtcbiAgICAgICAgaWYgKG1hdGNoZXMgJiYgbWF0Y2hlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLm1hdGNoVGV4dCA9IG1hdGNoZXNbMV07XG4gICAgICAgICAgICBtZW1iZXJNb2RlID0gdHJ1ZTtcbiAgICAgICAgICAgIC8vIEFkanVzdCB0aGUgcG9zaXRpb24uXG4gICAgICAgICAgICBwb3NpdGlvbiAtPSB0aGlzLm1hdGNoVGV4dC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtYXRjaGVzID0gdGV4dC5tYXRjaCgvW2EtekEtWl8wLTlcXCRdKiQvKTtcbiAgICAgICAgICAgIHRoaXMubWF0Y2hUZXh0ID0gbWF0Y2hlc1swXTtcbiAgICAgICAgICAgIG1lbWJlck1vZGUgPSBmYWxzZTtcbiAgICAgICAgICAgIC8vIExlYXZlIHRoZSBwb3NpdGlvbiBhcy1pcy5cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0Q29tcGxldGlvbnNBdFBvc2l0aW9uKGZpbGVOYW1lLCBwb3NpdGlvbiwgbWVtYmVyTW9kZSk7XG4gICAgfVxufVxuIl19